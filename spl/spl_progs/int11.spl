alias userSP R0;
userSP = SP;
[PROCESS_TABLE +([SYSTEM_STATUS_TABLE + 1]*16) +13] = SP;
SP = [PROCESS_TABLE +([SYSTEM_STATUS_TABLE + 1]*16) +11]*512 - 1; 
alias sys R1;
sys = [[PTBR + ((userSP - 5)/512)*2]*512 + (userSP-5)%512];
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = sys;

if(sys == 13)then
	alias pid R2;
	pid = [[PTBR + ((userSP - 4)/512)*2]*512 + (userSP-4)%512];
	alias ret R3;
	ret =  [PTBR + ((userSP - 1)/512)*2]*512 + (userSP-1)%512;
	if(pid >15 || pid == [SYSTEM_STATUS_TABLE + 1] || [PROCESS_TABLE + pid*16 + 4] == TERMINATED)then
		[ret] = -1;
	else
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_PROCESS;
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 5] = pid;
		[ret] = 0;
		call MOD_5;
	endif;
else
if(sys == 14)then
	alias ent R2;
	ent = 0;
	alias ret R3;
	ret =  [PTBR + ((userSP - 1)/512)*2]*512 + (userSP-1)%512;
	while(ent < 16)do
		if( [PROCESS_TABLE + ent*16 + 4] == WAIT_PROCESS && [PROCESS_TABLE + ent*16 + 5] == [SYSTEM_STATUS_TABLE + 1])then
			[PROCESS_TABLE + ent*16 + 4] = READY;
		endif;
		ent = ent + 1;
	endwhile;
	[ret] = 0;
else
if(sys == 11)then
	alias ret R3;
	ret =  [PTBR + ((userSP - 1)/512)*2]*512 + (userSP-1)%512;
	[ret] = [SYSTEM_STATUS_TABLE + 1];
else
if(sys == 12)then
	alias ret R3;
	ret =  [PTBR + ((userSP - 1)/512)*2]*512 + (userSP-1)%512;
	[ret] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 2];
endif;
endif;
endif;
endif;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
SP = [PROCESS_TABLE +([SYSTEM_STATUS_TABLE + 1]*16) +13];
ireturn;
