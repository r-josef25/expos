[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = -1;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11]*512 -1; 
backup;
alias userSP R4;
multipush(EIP);
alias epn R5;
epn = EPN;
userSP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
if(EC != 0 || userSP == (512*PTLR - 1))then
	print "exception";
	R2 = [SYSTEM_STATUS_TABLE + 1];
	R1 = 3;
	call MOD_1;
	alias pid R0;
	pid = 1;
	while(pid < 16)do
		if([PROCESS_TABLE + pid*16 + 4] != TERMINATED)then 
			call MOD_5;
		endif;
		pid = pid + 1;
	endwhile;
	halt;
else
if(EPN < 4)then
	R1 = 1;
	call MOD_2;
	[PTBR + 4] = R0;
	[PTBR + 5] = "1110";
	R1 = 1;
	call MOD_2;
	[PTBR + 6] = R0;
	[PTBR + 7] = "1110";
else
	R2 = [DISK_MAP_TABLE + [SYSTEM_STATUS_TABLE + 1]*10 + epn];
	R1 = 5;
	multipush(R5);
	call MOD_2;
	multipop(R5);
	[PTBR + epn*2] = R0;
	[PTBR + epn*2 + 1] = "1100";
endif;
endif;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;
multipop(EIP);
restore;
SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
SP = SP + 1;
[[PTBR + (SP/512)*2]*512 + (SP%512)] = EIP;
ireturn;
